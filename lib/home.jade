template(name='home')
    .ui.padded.stackable.grid
        .sixteen.wide.column
            .ui.inline.header 
                i.pizza.slice.icon
                |backcountry
                |#{home_items.count}
                // i.chat.outline.large.icon(title='backcountry chat')
            // if currentUser
            i.large.circular.link.plus.icon.add_post
            // .ui.large.icon.input(title='messages cost one point but can receive points from votes')
            //     i.plus.icon
            //     input.new_message(type='text' placeholder='quick add (-1p)')
            if tag_results
                // .ui.inline.small.header
                //     i.tag.icon
                //     |tags
                each picked_tags
                    a.ui.black.big.label.unpick_tag
                        with wiki_doc_flat
                            img(src=metadata.image)
                        |#{this}
                each tag_results
                    +tag_picker
            +search_input model='post' field='title'
            
        .ui.sixteen.wide.column
            if current_post
                // .ui.stackable.padded.grid
                //     .sixteen.wide.column.scrollin
                with current_post
                    +post_view
                        // .ui.header
                        //     |#{title}
                // .six.wide.column.scrolling
                //     each home_items
                //         +home_item
                //         // .ui.divider
            else 
                .ui.doubling.five.cards.scrollin
                    each home_items
                        +home_item
                    
template(name='tag_picker')
    if title
        a.ui.basic.large.link.image.label.pick_tag(title=count)
            with wiki_doc
                img(src=metadata.image)
            |#{title} 
            // small.ui.grey.text #{count}



template(name='home_item')
    // if session_is 'editing_chat' _id
    //     .ui.item
    //         .content
    //             +text_edit key='title' direct=true
    //             i.checkmark.large.link.green.icon.save_chat   
    //             +boolean_edit key='archived' label='archived' icon='archive' direct=true
    // else
    .ui.card.zoomer.pointer.view_item(class=card_class)
        if image_id
            +image_view key='image_id' direct=true 
        if youtube_id
            +youtube_view key='image_id' direct=true
        // if is_selected
        //     .ui.header this one
        // if unless
        // else
        //     img.ui.image(src="{{c.url image_id width=500 height=500 gravity='face' crop='fill'}}")
        .content
            // a.ui.header.zoomer.fly_right(href="/post/#{_id}") !{title}
            a.ui.inline.header.zoomer !{title}
            
            // if _author_username
            //     a(href="/user/#{_author_username}")
            //         |#{_author_username}
            // else 
            //     // i.anon.grey.icon
            //     |anonymous
                
            .metadata
                |#{when}
                small {{long_date _timestamp}}
            .text.view_post_quick.zoomer
                |!{body}
            span.meta
                // if is_task
                //     i.big.checkmark.icon.zoomer
                // if is_event
                //     i.big.calendar.icon.zoomer
                // if has_price
                //     .ui.green.button
                //         |buy #{price_points}p, $#{price_dollars}
                //     i.big.calendar.icon.zoomer
                // if has_location
                //     i.large.red.marker.icon.zoomer
                //     |#{location}
                // span(title='views')
                //     i.eye.link.icon.zoomer
                //     |#{views}
                if watson
                    +doc_emotion_small
            // unless viewing_full
            //     .ui.icon.zoomer.circular.basic.button.view_full
            //         i.chevron.down.icon.zoomer
            //         // |view full
            // if viewing_full
            //     .ui.icon.zoomer.circular.basic.button.view_less
            //         i.chevron.up.icon.zoomer
            //         // |view less
            // i.grey.tag.icon.zoomer
            each tags 
                .ui.small.basic.label.zoomer #{this}
            // i.grey.marker.icon.zoomer
            each location_tags 
                .ui.small.basic.label.zoomer #{this}
            // .ui.basic.small.label.zoomer
            //     i.database.icon.zoomer
            //     |#{model}
            // .ui.basic.small.label.zoomer
            //     i.database.icon.zoomer
            //     |#{app}


template(name='task_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.column
                    .ui.inline.header
                        i.pencil.icon
                        | #{title}
                        small task
                    a.ui.large.icon.green.button(href="/task/#{_id}/" title='save product')
                        i.checkmark.big.icon
                    +text_edit key='title' label='title' direct=true
                    +image_edit key='image_id' label='image' direct=true
                    div
                    +boolean_edit key='has_user_assignment' label='has user assignment' direct=true
                    if has_user_assignment
                        each group_members
                            .ui.button.assign_member #{username}
                    div
                    +boolean_edit key='has_minute_expectation' label='has minute expectation' direct=true
                    div
                    if has_minute_expectation
                        +number_edit key='minute_expectation' label='time expectation (minutes)' direct=true
                    div
                    +boolean_edit key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                    div
                    if has_duedatetime
                        +datetime_edit key='due_datetime' label='due date/time' icon='calendar' direct=true
                    +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                    div
                    +boolean_edit key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                    div
                    if has_point_bounty
                        +number_edit key='point_bounty' label='point_bounty' direct=true
                    div
                .ten.wide.column
                    div
                    +boolean_edit key='has_subgroup_specification' label='has specific subgroup' icon='users' direct=true
                    div
                    .ui.header     
                        i.users.icon
                        |subgroup availability
                    each current_subgroups
                        .ui.button.select_subgroup(class=subgroup_class)
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            |#{title}
                    +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                    +html_edit key='description' label='description' direct=true
                    .ui.header     
                        i.large.marker.icon
                        |possible locations
                    each task_locations
                        .ui.button.select_location(class=location_class)
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            |#{title}
                    +array_edit key='tags' label='tags' icon='tags' direct=true
                    .ui.red.button.delete_task
                        i.remove.icon   
                        | delete
                
                
template(name='task_view')
    .six.wide.column
        a.ui.icon.button(href="/task/#{_id}/edit")
            i.pencil.icon
        +boolean_view key='has_user_assignment' label='has user assignment' direct=true
        if has_user_assignment
            each group_members
                .ui.button.assign_member #{username}
        +boolean_view key='has_minute_expectation' label='has minute expectation' direct=true
        if has_minute_expectation
            +number_view key='minute_expectation' label='time expectation (minutes)' direct=true
        +boolean_view key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
        if has_duedatetime
            +datetime_view key='due_datetime' label='due date/time' icon='calendar' direct=true
        +number_view key='amount' label='amount (leave 0 for infinite)' direct=true
        +boolean_view key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
        if has_point_bounty
            +number_view key='point_bounty' label='point_bounty' direct=true
            
    .ten.wide.column
        div.scrolling
            +html_view key='notes' label='directions' direct=true
        // .ui.inline.header 
        //     i.large.marker.icon
        //     |possible locations
        // each possible_locations
        //     .ui.large.label #{title}
        if currentUser
            .ui.button.record_work
                |record work
        .ui.header 
            i.wrench.icon
            |work
        .ui.selection.animated.list
            each task_work
                a.item(href="/work/#{_id}") 
                    img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                    if before_image_id
                        img.ui.tiny.inline.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                    if before_image_id
                        img.ui.tiny.inline.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                    |#{when} #{_author_username}
        +html_view key='description' label='description' direct=true
                            